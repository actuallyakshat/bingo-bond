generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  createdBonds Bond[]   @relation("admin_bond")
  memberships  Member[] @relation("user_memberships")
}

model Bond {
  id          String     @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  createdById String
  createdBy   User       @relation(fields: [createdById], references: [id], name: "admin_bond")
  members     Member[]
  bingoCard   BingoCard?

  @@index([createdById])
}

model Member {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bondId    String
  bond      Bond     @relation(fields: [bondId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation("user_memberships", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([bondId, userId])
  @@index([bondId])
  @@index([userId])
}

model BingoCard {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  bondId    String      @unique
  bond      Bond        @relation(fields: [bondId], references: [id], onDelete: Cascade)
  cells     BingoCell[]

  @@index([bondId])
}

model BingoCell {
  id        String    @id @default(uuid())
  position  Int
  activity  String
  completed Boolean   @default(false)
  cardId    String
  card      BingoCard @relation(fields: [cardId], references: [id], onDelete: Cascade)

  @@unique([cardId, position])
  @@index([cardId])
}
